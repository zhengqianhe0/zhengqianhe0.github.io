import{_ as e,c as s,a as l,o as i}from"./app-CtcNptRb.js";const a={};function t(r,n){return i(),s("div",null,n[0]||(n[0]=[l(`<h1 id="_3516-找到最近的人" tabindex="-1"><a class="header-anchor" href="#_3516-找到最近的人"><span><a href="https://leetcode.cn/problems/find-closest-person/" target="_blank" rel="noopener noreferrer">3516. 找到最近的人</a></span></a></h1><p>给你三个整数 <code>x</code>、<code>y</code> 和 <code>z</code>，表示数轴上三个人的位置：</p><ul><li><code>x</code> 是第 1 个人的位置。</li><li><code>y</code> 是第 2 个人的位置。</li><li><code>z</code> 是第 3 个人的位置，第 3 个人 <strong>不会移动</strong> 。</li></ul><p>第 1 个人和第 2 个人以 <strong>相同</strong> 的速度向第 3 个人移动。</p><p>判断谁会 <strong>先</strong> 到达第 3 个人的位置：</p><ul><li>如果第 1 个人先到达，返回 1 。</li><li>如果第 2 个人先到达，返回 2 。</li><li>如果两个人同时到达，返回 <strong>0</strong> 。</li></ul><p>根据上述规则返回结果。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong> x = 2, y = 7, z = 4</p><p><strong>输出：</strong> 1</p><p><strong>解释：</strong></p><ul><li>第 1 个人在位置 2，到达第 3 个人（位置 4）需要 2 步。</li><li>第 2 个人在位置 7，到达第 3 个人需要 3 步。</li></ul><p>由于第 1 个人先到达，所以输出为 1。</p><p><strong>示例 2：</strong></p><p><strong>输入：</strong> x = 2, y = 5, z = 6</p><p><strong>输出：</strong> 2</p><p><strong>解释：</strong></p><ul><li>第 1 个人在位置 2，到达第 3 个人（位置 6）需要 4 步。</li><li>第 2 个人在位置 5，到达第 3 个人需要 1 步。</li></ul><p>由于第 2 个人先到达，所以输出为 2。</p><p><strong>示例 3：</strong></p><p><strong>输入：</strong> x = 1, y = 5, z = 3</p><p><strong>输出：</strong> 0</p><p><strong>解释：</strong></p><ul><li>第 1 个人在位置 1，到达第 3 个人（位置 3）需要 2 步。</li><li>第 2 个人在位置 5，到达第 3 个人需要 2 步。</li></ul><p>由于两个人同时到达，所以输出为 0。</p><p><strong>提示：</strong></p><ul><li><code>1 &lt;= x, y, z &lt;= 100</code></li></ul><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><p>直接比较举例绝对值。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    int findClosest(int x, int y, int z) {</span>
<span class="line">        int a=abs(x-z);</span>
<span class="line">        int b=abs(y-z);</span>
<span class="line">        int ans;</span>
<span class="line">        if(a&gt;b){</span>
<span class="line">            return 2;</span>
<span class="line">        }else if(a&lt;b){</span>
<span class="line">            return 1;</span>
<span class="line">        }else{</span>
<span class="line">            return 0;</span>
<span class="line">        }</span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂度分析</p><ul><li>时间复杂度：O(1)</li><li>空间复杂度：O(1)</li></ul>`,32)]))}const p=e(a,[["render",t]]),c=JSON.parse('{"path":"/leetcode/20250904.html","title":"3516. 找到最近的人","lang":"zh-CN","frontmatter":{"date":"2025-09-04T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["数学"]},"headers":[],"git":{"updatedTime":1757033208000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":2,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"74ad287b3313cc2928def8d57bf83e6110f9aa4d","time":1757033208000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"整理分类"},{"hash":"22e28e4715cb3447ff000fc59c10e4b913de772c","time":1756953912000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20250904.md","excerpt":"\\n<p>给你三个整数 <code>x</code>、<code>y</code> 和 <code>z</code>，表示数轴上三个人的位置：</p>\\n<ul>\\n<li><code>x</code> 是第 1 个人的位置。</li>\\n<li><code>y</code> 是第 2 个人的位置。</li>\\n<li><code>z</code> 是第 3 个人的位置，第 3 个人 <strong>不会移动</strong> 。</li>\\n</ul>\\n<p>第 1 个人和第 2 个人以 <strong>相同</strong> 的速度向第 3 个人移动。</p>\\n<p>判断谁会 <strong>先</strong> 到达第 3 个人的位置：</p>"}');export{p as comp,c as data};
