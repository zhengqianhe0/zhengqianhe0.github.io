import{_ as s,c as n,a as l,o as i}from"./app-CtcNptRb.js";const o={};function a(t,e){return i(),n("div",null,e[0]||(e[0]=[l(`<h1 id="_3461-判断操作后字符串中的数字是否相等-i" tabindex="-1"><a class="header-anchor" href="#_3461-判断操作后字符串中的数字是否相等-i"><span><a href="https://leetcode.cn/problems/check-if-digits-are-equal-in-string-after-operations-i/" target="_blank" rel="noopener noreferrer">3461. 判断操作后字符串中的数字是否相等 I</a></span></a></h1><p>给你一个由数字组成的字符串 <code>s</code> 。重复执行以下操作，直到字符串恰好包含 <strong>两个</strong> 数字：</p><ul><li>从第一个数字开始，对于 <code>s</code> 中的每一对连续数字，计算这两个数字的和 <strong>模</strong> 10。</li><li>用计算得到的新数字依次替换 <code>s</code> 的每一个字符，并保持原本的顺序。</li></ul><p>如果 <code>s</code> 最后剩下的两个数字 <strong>相同</strong> ，返回 <code>true</code> 。否则，返回 <code>false</code>。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong> s = &quot;3902&quot;</p><p><strong>输出：</strong> true</p><p><strong>解释：</strong></p><ul><li>一开始，<code>s = &quot;3902&quot;</code></li><li>第一次操作： <ul><li><code>(s[0] + s[1]) % 10 = (3 + 9) % 10 = 2</code></li><li><code>(s[1] + s[2]) % 10 = (9 + 0) % 10 = 9</code></li><li><code>(s[2] + s[3]) % 10 = (0 + 2) % 10 = 2</code></li><li><code>s</code> 变为 <code>&quot;292&quot;</code></li></ul></li><li>第二次操作： <ul><li><code>(s[0] + s[1]) % 10 = (2 + 9) % 10 = 1</code></li><li><code>(s[1] + s[2]) % 10 = (9 + 2) % 10 = 1</code></li><li><code>s</code> 变为 <code>&quot;11&quot;</code></li></ul></li><li>由于 <code>&quot;11&quot;</code> 中的数字相同，输出为 <code>true</code>。</li></ul><p><strong>示例 2：</strong></p><p><strong>输入：</strong> s = &quot;34789&quot;</p><p><strong>输出：</strong> false</p><p><strong>解释：</strong></p><ul><li>一开始，<code>s = &quot;34789&quot;</code>。</li><li>第一次操作后，<code>s = &quot;7157&quot;</code>。</li><li>第二次操作后，<code>s = &quot;862&quot;</code>。</li><li>第三次操作后，<code>s = &quot;48&quot;</code>。</li><li>由于 <code>&#39;4&#39; != &#39;8&#39;</code>，输出为 <code>false</code>。</li></ul><p><strong>提示：</strong></p><ul><li><code>3 &lt;= s.length &lt;= 100</code></li><li><code>s</code> 仅由数字组成。</li></ul><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    bool hasSameDigits(string s) {</span>
<span class="line">        int n = s.length();</span>
<span class="line">        // 共n个元素，需要减到2个，执行n-2次</span>
<span class="line">        for (int i = 1; i &lt;= n - 2; i++) {</span>
<span class="line">        	// 每次将数组内的所有字符转成数字取余，再转回字符，注意长度是当前长度-1</span>
<span class="line">            for (int j = 0; j &lt;= n - 1 - i; j++) {</span>
<span class="line">                s[j] = ((s[j] - &#39;0&#39;) + (s[j + 1] - &#39;0&#39;)) % 10 + &#39;0&#39;;</span>
<span class="line">            }</span>
<span class="line">        }</span>
<span class="line">        return s[0] == s[1];</span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂度分析</p><ul><li>时间复杂度：O(n²)</li><li>空间复杂度：O(1)</li></ul>`,20)]))}const d=s(o,[["render",a]]),r=JSON.parse('{"path":"/leetcode/20251023.html","title":"3461. 判断操作后字符串中的数字是否相等 I","lang":"zh-CN","frontmatter":{"date":"2025-10-23T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["数组","字符串","数论","模拟"]},"headers":[],"git":{"updatedTime":1761704241000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":1,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"81919479e8539e8d2389317ae4c774b0a7212f3e","time":1761704241000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20251023.md","excerpt":"\\n<p>给你一个由数字组成的字符串 <code>s</code> 。重复执行以下操作，直到字符串恰好包含 <strong>两个</strong> 数字：</p>\\n<ul>\\n<li>从第一个数字开始，对于 <code>s</code> 中的每一对连续数字，计算这两个数字的和 <strong>模</strong> 10。</li>\\n<li>用计算得到的新数字依次替换 <code>s</code> 的每一个字符，并保持原本的顺序。</li>\\n</ul>\\n<p>如果 <code>s</code> 最后剩下的两个数字 <strong>相同</strong> ，返回 <code>true</code> 。否则，返回 <code>false</code>。</p>"}');export{d as comp,r as data};
