import{_ as o,c as s,a as n,o as t}from"./app-CtcNptRb.js";const c={};function r(l,e){return t(),s("div",null,e[0]||(e[0]=[n(`<h1 id="_3227-字符串元音游戏" tabindex="-1"><a class="header-anchor" href="#_3227-字符串元音游戏"><span><a href="https://leetcode.cn/problems/vowels-game-in-a-string/" target="_blank" rel="noopener noreferrer">3227. 字符串元音游戏</a></span></a></h1><p>小红和小明在玩一个字符串元音游戏。</p><p>给你一个字符串 <code>s</code>，小红和小明将轮流参与游戏，小红 <strong>先</strong> 开始：</p><ul><li>在小红的回合，她必须移除 <code>s</code> 中包含 <strong>奇数</strong> 个元音的任意 <strong>非空</strong> 子字符串。</li><li>在小明的回合，他必须移除 <code>s</code> 中包含 <strong>偶数</strong> 个元音的任意 <strong>非空</strong> 子字符串。</li></ul><p>第一个无法在其回合内进行移除操作的玩家输掉游戏。假设小红和小明都采取 <strong>最优策略</strong> 。</p><p>如果小红赢得游戏，返回 <code>true</code>，否则返回 <code>false</code>。</p><p>英文元音字母包括：<code>a</code>, <code>e</code>, <code>i</code>, <code>o</code>, 和 <code>u</code>。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong> s = &quot;leetcoder&quot;</p><p><strong>输出：</strong> true</p><p><strong>解释：</strong> 小红可以执行如下移除操作来赢得游戏：</p><ul><li>小红先手，她可以移除加下划线的子字符串 <code>s = &quot;**leetco**der&quot;</code>，其中包含 3 个元音。结果字符串为 <code>s = &quot;der&quot;</code>。</li><li>小明接着，他可以移除加下划线的子字符串 <code>s = &quot;**d**er&quot;</code>，其中包含 0 个元音。结果字符串为 <code>s = &quot;er&quot;</code>。</li><li>小红再次操作，她可以移除整个字符串 <code>s = &quot;**er**&quot;</code>，其中包含 1 个元音。</li><li>又轮到小明，由于字符串为空，无法执行移除操作，因此小红赢得游戏。</li></ul><p><strong>示例 2：</strong></p><p><strong>输入：</strong> s = &quot;bbcd&quot;</p><p><strong>输出：</strong> false</p><p><strong>解释：</strong> 小红在她的第一回合无法执行移除操作，因此小红输掉了游戏。</p><p><strong>提示：</strong></p><ul><li><code>1 &lt;= s.length &lt;= 105</code></li><li><code>s</code> 仅由小写英文字母组成。</li></ul><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><p>分类讨论：</p><p>如果 s 不包含任何元音，小红输。 如果 s 包含奇数个元音，小红可以直接把整个 s 移除，小红赢。 如果 s 包含正偶数个元音，由于偶数减奇数等于奇数，小红移除任意包含奇数个元音的子串后，剩余元音个数仍然为奇数。由于奇数减偶数还是奇数，所以无论小明怎么操作，仍然会剩下奇数个元音，此时小红可以直接把整个 s 移除，小红赢。</p><p>所以只要 s 包含至少一个元音，就返回 true，否则返回 false。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    bool doesAliceWin(string s) {</span>
<span class="line">        return ranges::any_of(s, [](char c) {</span>
<span class="line">            return c == &#39;a&#39; || c == &#39;e&#39; || c == &#39;i&#39; || c == &#39;o&#39; || c == &#39;u&#39;;</span>
<span class="line">        });</span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>C++20引入的ranges库中any_of的用法：</p><ol><li><p><strong>第一个参数（范围对象）</strong> 可以是任何<strong>符合范围概念（Range）</strong> 的对象，包括：</p><ul><li>标准容器：<code>std::string</code>、<code>std::vector</code>、<code>std::array</code>、<code>std::list</code> 等</li><li>原生数组：如 <code>int arr[] = {1,2,3}</code></li><li>其他满足范围要求的自定义类型（需实现 <code>begin()</code> 和 <code>end()</code> 迭代器）</li></ul><p>本质上，只要对象能通过 <code>begin()</code> 和 <code>end()</code> 获取迭代器，就能作为 <code>ranges::any_of</code> 的第一个参数。例如，<code>std::string</code> 会被视作字符的范围，<code>std::vector&lt;int&gt;</code> 会被视作整数的范围。</p></li><li><p><strong>第二个参数（谓词函数）</strong> 是一个<strong>谓词（Predicate）</strong>，即：</p><ul><li>可以是函数指针、函数对象（ functor ）或 lambda 表达式</li><li>接收范围中的单个元素作为参数（类型需与范围元素类型匹配）</li><li>返回 <code>bool</code> 类型结果，表示该元素是否满足条件</li></ul><p><code>ranges::any_of</code> 的逻辑是：<strong>只要范围内有至少一个元素使谓词返回 <code>true</code>，整体就返回 <code>true</code>；否则返回 <code>false</code></strong>。</p></li></ol><p>复杂度分析</p><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(1)</li></ul>`,27)]))}const a=o(c,[["render",r]]),i=JSON.parse('{"path":"/leetcode/20250912.html","title":"3227. 字符串元音游戏","lang":"zh-CN","frontmatter":{"date":"2025-09-12T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["字符串","数学","脑筋急转弯"]},"headers":[],"git":{"updatedTime":1757645281000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":1,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"fa603102af97df2000ba0f7b41908187277fb1b5","time":1757645281000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20250912.md","excerpt":"\\n<p>小红和小明在玩一个字符串元音游戏。</p>\\n<p>给你一个字符串 <code>s</code>，小红和小明将轮流参与游戏，小红 <strong>先</strong> 开始：</p>\\n<ul>\\n<li>在小红的回合，她必须移除 <code>s</code> 中包含 <strong>奇数</strong> 个元音的任意 <strong>非空</strong> 子字符串。</li>\\n<li>在小明的回合，他必须移除 <code>s</code> 中包含 <strong>偶数</strong> 个元音的任意 <strong>非空</strong> 子字符串。</li>\\n</ul>\\n<p>第一个无法在其回合内进行移除操作的玩家输掉游戏。假设小红和小明都采取 <strong>最优策略</strong> 。</p>"}');export{a as comp,i as data};
