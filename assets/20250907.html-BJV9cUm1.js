import{_ as e,c as s,a,o as i}from"./app-CtcNptRb.js";const l={};function d(t,n){return i(),s("div",null,n[0]||(n[0]=[a(`<h1 id="_1304-和为零的-n-个不同整数" tabindex="-1"><a class="header-anchor" href="#_1304-和为零的-n-个不同整数"><span><a href="https://leetcode.cn/problems/find-n-unique-integers-sum-up-to-zero/" target="_blank" rel="noopener noreferrer">1304. 和为零的 N 个不同整数</a></span></a></h1><p>给你一个整数 <code>n</code>，请你返回 <strong>任意</strong> 一个由 <code>n</code> 个 <strong>各不相同</strong> 的整数组成的数组，并且这 <code>n</code> 个数相加和为 <code>0</code> 。</p><p><strong>示例 1：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 5</span>
<span class="line">输出：[-7,-1,1,3,4]</span>
<span class="line">解释：这些数组也是正确的 [-5,-1,1,2,3]，[-3,-1,2,-2,4]。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 3</span>
<span class="line">输出：[-1,0,1]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 1</span>
<span class="line">输出：[0]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p><ul><li><code>1 &lt;= n &lt;= 1000</code></li></ul><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><p>直接构造数组，一半正数一半负数，如果总数是奇数则补充一个0。</p><p>从计算效率角度讲，直接构造定长vector，并通过数组索引效率会更好。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    vector&lt;int&gt; sumZero(int n) {</span>
<span class="line">        vector&lt;int&gt; ans;</span>
<span class="line">        int max=n/2;</span>
<span class="line">        for(int i=1;i&lt;=max;i++){</span>
<span class="line">            ans.push_back(0-i);</span>
<span class="line">            ans.push_back(i);</span>
<span class="line">        }</span>
<span class="line">        if(n%2){</span>
<span class="line">            ans.push_back(0);</span>
<span class="line">        }</span>
<span class="line">        return ans;</span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂度分析</p><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(1)</li></ul>`,16)]))}const c=e(l,[["render",d]]),p=JSON.parse('{"path":"/leetcode/20250907.html","title":"1304. 和为零的 N 个不同整数","lang":"zh-CN","frontmatter":{"date":"2025-09-07T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["位运算","数学","数组"]},"headers":[],"git":{"updatedTime":1757214644000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":1,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"70d7ed20cfd618f0a3f54b8e520da399a4a4d2bd","time":1757214644000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20250907.md","excerpt":"\\n<p>给你一个整数 <code>n</code>，请你返回 <strong>任意</strong> 一个由 <code>n</code> 个 <strong>各不相同</strong> 的整数组成的数组，并且这 <code>n</code> 个数相加和为 <code>0</code> 。</p>\\n<p><strong>示例 1：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"text\\"><pre><code><span class=\\"line\\">输入：n = 5</span>\\n<span class=\\"line\\">输出：[-7,-1,1,3,4]</span>\\n<span class=\\"line\\">解释：这些数组也是正确的 [-5,-1,1,2,3]，[-3,-1,2,-2,4]。</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{c as comp,p as data};
