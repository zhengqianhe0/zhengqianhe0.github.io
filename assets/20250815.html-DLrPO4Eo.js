import{_ as n,c as a,a as s,o as i}from"./app-CtcNptRb.js";const l={};function t(d,e){return i(),a("div",null,e[0]||(e[0]=[s(`<h1 id="_342-4的幂" tabindex="-1"><a class="header-anchor" href="#_342-4的幂"><span><a href="https://leetcode.cn/problems/power-of-four/" target="_blank" rel="noopener noreferrer">342. 4的幂</a></span></a></h1><p>给定一个整数，写一个函数来判断它是否是 4 的幂次方。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p>整数 <code>n</code> 是 4 的幂次方需满足：存在整数 <code>x</code> 使得 <code>n == 4x</code></p><p><strong>示例 1：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 16</span>
<span class="line">输出：true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 5</span>
<span class="line">输出：false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 1</span>
<span class="line">输出：true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p><ul><li><code>-231 &lt;= n &lt;= 231 - 1</code></li></ul><p>**进阶：**你能不使用循环或者递归来完成本题吗？</p><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><ul><li>4的幂必须是2的幂，所以可以沿用(n &amp; (n - 1)) == 0 判断2的幂。同时，要求在二进制表示中从低到高只有偶数位可以是1。因此，设计一个掩码。在32位int下，（1010……1010）2 对应（AAAAAAAA）16，代码表示即0xaaaaaaaa。按位进行与运算，得到的就是奇数位是否存在1的情况。</li><li>同时可以根据余数判断。同余（4的幂 3+1的幂 1的幂）mod3 ，而2的幂等于4的幂*2，mod3余2。依照这一数学性质判断。</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    bool isPowerOfFour(int n) {</span>
<span class="line">        // return n &gt; 0 &amp;&amp; (n &amp; (n - 1)) == 0 &amp;&amp; (n &amp; 0xaaaaaaaa) == 0;</span>
<span class="line">        return n &gt; 0 &amp;&amp; (n &amp; (n - 1)) == 0 &amp;&amp; n % 3 == 1;</span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂度分析</p><ul><li>时间复杂度：O(1)</li><li>空间复杂度：O(1)</li></ul>`,17)]))}const c=n(l,[["render",t]]),p=JSON.parse('{"path":"/leetcode/20250815.html","title":"342. 4的幂","lang":"zh-CN","frontmatter":{"date":"2025-08-15T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["数学","位运算"]},"headers":[],"git":{"updatedTime":1757033208000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":2,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"74ad287b3313cc2928def8d57bf83e6110f9aa4d","time":1757033208000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"整理分类"},{"hash":"8a9b5b6b19170bb64a554c5f61b60300f10f93e3","time":1755222282000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20250815.md","excerpt":"\\n<p>给定一个整数，写一个函数来判断它是否是 4 的幂次方。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\\n<p>整数 <code>n</code> 是 4 的幂次方需满足：存在整数 <code>x</code> 使得 <code>n == 4x</code></p>\\n<p><strong>示例 1：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"text\\"><pre><code><span class=\\"line\\">输入：n = 16</span>\\n<span class=\\"line\\">输出：true</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{c as comp,p as data};
