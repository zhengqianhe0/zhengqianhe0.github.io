import{_ as e,c as s,a as i,o as a}from"./app-CtcNptRb.js";const l={};function t(r,n){return a(),s("div",null,n[0]||(n[0]=[i(`<h1 id="_3195-包含所有-1-的最小矩形面积-i" tabindex="-1"><a class="header-anchor" href="#_3195-包含所有-1-的最小矩形面积-i"><span><a href="https://leetcode.cn/problems/find-the-minimum-area-to-cover-all-ones-i/" target="_blank" rel="noopener noreferrer">3195. 包含所有 1 的最小矩形面积 I</a></span></a></h1><p>给你一个二维 <strong>二进制</strong> 数组 <code>grid</code>。请你找出一个边在水平方向和竖直方向上、面积 <strong>最小</strong> 的矩形，并且满足 <code>grid</code> 中所有的 1 都在矩形的内部。</p><p>返回这个矩形可能的 <strong>最小</strong> 面积。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong> grid = [[0,1,0],[1,0,1]]</p><p><strong>输出：</strong> 6</p><p>这个最小矩形的高度为 2，宽度为 3，因此面积为 <code>2 * 3 = 6</code>。</p><p><strong>示例 2：</strong></p><p><strong>输入：</strong> grid = [[0,0],[1,0]]</p><p><strong>输出：</strong> 1</p><p>这个最小矩形的高度和宽度都是 1，因此面积为 <code>1 * 1 = 1</code>。</p><p><strong>提示：</strong></p><ul><li><code>1 &lt;= grid.length, grid[i].length &lt;= 1000</code></li><li><code>grid[i][j]</code> 是 0 或 1。</li><li>输入保证 <code>grid</code> 中至少有一个 1 。</li></ul><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><p>简单遍历数组，每次维护边界</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    int minimumArea(vector&lt;vector&lt;int&gt;&gt;&amp; grid) {</span>
<span class="line">        int m=grid.size(),n=grid[0].size();</span>
<span class="line">        int top=INT_MAX,bot=INT_MIN,left=INT_MAX,right=INT_MIN;</span>
<span class="line">        for(int i=0;i&lt;m;++i){</span>
<span class="line">            for(int j=0;j&lt;n;++j){</span>
<span class="line">                if(grid[i][j]==1){</span>
<span class="line">                    left=min(left,j);</span>
<span class="line">                    right=max(right,j);</span>
<span class="line">                    top=min(top,i);</span>
<span class="line">                    bot=max(bot,i);</span>
<span class="line">                }</span>
<span class="line">            }</span>
<span class="line">        }</span>
<span class="line">        return (right-left+1)*(bot-top+1);</span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂度分析</p><ul><li>时间复杂度：O(mn)</li><li>空间复杂度：O(1)</li></ul>`,18)]))}const o=e(l,[["render",t]]),c=JSON.parse('{"path":"/leetcode/20250822.html","title":"3195. 包含所有 1 的最小矩形面积 I","lang":"zh-CN","frontmatter":{"date":"2025-08-22T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["数组","矩阵"]},"headers":[],"git":{"updatedTime":1757033208000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":3,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"74ad287b3313cc2928def8d57bf83e6110f9aa4d","time":1757033208000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"整理分类"},{"hash":"6f6777a3c57973a00f54666525105e6f64a3ba53","time":1755927301000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"},{"hash":"fbb3f64cac5d4f4652a3ed29b34a2293d467166d","time":1755825309000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20250822.md","excerpt":"\\n<p>给你一个二维 <strong>二进制</strong> 数组 <code>grid</code>。请你找出一个边在水平方向和竖直方向上、面积 <strong>最小</strong> 的矩形，并且满足 <code>grid</code> 中所有的 1 都在矩形的内部。</p>\\n<p>返回这个矩形可能的 <strong>最小</strong> 面积。</p>\\n<p><strong>示例 1：</strong></p>\\n<p><strong>输入：</strong> grid = [[0,1,0],[1,0,1]]</p>\\n<p><strong>输出：</strong> 6</p>\\n<p>这个最小矩形的高度为 2，宽度为 3，因此面积为 <code>2 * 3 = 6</code>。</p>"}');export{o as comp,c as data};
