import{_ as s,c as e,a,o as i}from"./app-CtcNptRb.js";const l={};function t(r,n){return i(),e("div",null,n[0]||(n[0]=[a(`<h1 id="_3397-执行操作后不同元素的最大数量" tabindex="-1"><a class="header-anchor" href="#_3397-执行操作后不同元素的最大数量"><span><a href="https://leetcode.cn/problems/maximum-number-of-distinct-elements-after-operations/" target="_blank" rel="noopener noreferrer">3397. 执行操作后不同元素的最大数量</a></span></a></h1><p>给你一个整数数组 <code>nums</code> 和一个整数 <code>k</code>。</p><p>你可以对数组中的每个元素 <strong>最多</strong> 执行 <strong>一次</strong> 以下操作：</p><ul><li>将一个在范围 <code>[-k, k]</code> 内的整数加到该元素上。</li></ul><p>返回执行这些操作后，<code>nums</code> 中可能拥有的不同元素的 <strong>最大</strong> 数量。</p><p><strong>示例 1：</strong></p><p><strong>输入：</strong> nums = [1,2,2,3,3,4], k = 2</p><p><strong>输出：</strong> 6</p><p><strong>解释：</strong></p><p>对前四个元素执行操作，<code>nums</code> 变为 <code>[-1, 0, 1, 2, 3, 4]</code>，可以获得 6 个不同的元素。</p><p><strong>示例 2：</strong></p><p><strong>输入：</strong> nums = [4,4,4,4], k = 1</p><p><strong>输出：</strong> 3</p><p><strong>解释：</strong></p><p>对 <code>nums[0]</code> 加 -1，以及对 <code>nums[1]</code> 加 1，<code>nums</code> 变为 <code>[3, 5, 4, 4]</code>，可以获得 3 个不同的元素。</p><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 105</code></li><li><code>1 &lt;= nums[i] &lt;= 109</code></li><li><code>0 &lt;= k &lt;= 109</code></li></ul><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><p>找一个新的位置，要尽可能的小，又要满足x-k，x+k的范围内。用pre记录前一个处理成功的位置</p><p>优化：如果数组长度小于最大能容纳的元素个数2k+1，直接返回答案。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    int maxDistinctElements(vector&lt;int&gt;&amp; nums, int k) {</span>
<span class="line">        int n=nums.size();</span>
<span class="line">        if(k*2+1&gt;=n){</span>
<span class="line">            return n;</span>
<span class="line">        }</span>
<span class="line">        sort(nums.begin(),nums.end());</span>
<span class="line">        int ans=0;</span>
<span class="line">        int pre=INT_MIN;</span>
<span class="line">        for(int x:nums){</span>
<span class="line">            x=min(max(x-k,pre+1),x+k);</span>
<span class="line">            if(x&gt;pre){</span>
<span class="line">                ans++;</span>
<span class="line">                pre=x;</span>
<span class="line">            }</span>
<span class="line">        }</span>
<span class="line">        return ans;</span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂度分析</p><ul><li>时间复杂度：O(nlogn)</li><li>空间复杂度：O(1)</li></ul>`,23)]))}const o=s(l,[["render",t]]),p=JSON.parse('{"path":"/leetcode/20251018.html","title":"3397. 执行操作后不同元素的最大数量","lang":"zh-CN","frontmatter":{"date":"2025-10-18T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["数组","贪心","排序"]},"headers":[],"git":{"updatedTime":1761139006000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":1,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"c119e9efed4ae6b489aae2aab4afa529062ca62c","time":1761139006000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20251018.md","excerpt":"\\n<p>给你一个整数数组 <code>nums</code> 和一个整数 <code>k</code>。</p>\\n<p>你可以对数组中的每个元素 <strong>最多</strong> 执行 <strong>一次</strong> 以下操作：</p>\\n<ul>\\n<li>将一个在范围 <code>[-k, k]</code> 内的整数加到该元素上。</li>\\n</ul>\\n<p>返回执行这些操作后，<code>nums</code> 中可能拥有的不同元素的 <strong>最大</strong> 数量。</p>\\n<p><strong>示例 1：</strong></p>\\n<p><strong>输入：</strong> nums = [1,2,2,3,3,4], k = 2</p>"}');export{o as comp,p as data};
