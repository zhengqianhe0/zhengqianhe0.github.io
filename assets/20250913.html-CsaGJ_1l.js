import{_ as n,c as s,a,o}from"./app-CtcNptRb.js";const c={};function l(i,e){return o(),s("div",null,e[0]||(e[0]=[a(`<h1 id="_3541-找到频率最高的元音和辅音" tabindex="-1"><a class="header-anchor" href="#_3541-找到频率最高的元音和辅音"><span><a href="https://leetcode.cn/problems/find-most-frequent-vowel-and-consonant/" target="_blank" rel="noopener noreferrer">3541. 找到频率最高的元音和辅音</a></span></a></h1><p>给你一个由小写英文字母（<code>&#39;a&#39;</code> 到 <code>&#39;z&#39;</code>）组成的字符串 <code>s</code>。你的任务是找出出现频率 <strong>最高</strong> 的元音（<code>&#39;a&#39;</code>、<code>&#39;e&#39;</code>、<code>&#39;i&#39;</code>、<code>&#39;o&#39;</code>、<code>&#39;u&#39;</code> 中的一个）和出现频率<strong>最高</strong>的辅音（除元音以外的所有字母），并返回这两个频率之和。</p><p><strong>注意</strong>：如果有多个元音或辅音具有相同的最高频率，可以任选其中一个。如果字符串中没有元音或没有辅音，则其频率视为 0。</p><p>一个字母 <code>x</code> 的 <strong>频率</strong> 是它在字符串中出现的次数。</p><p><strong>示例 1：</strong></p><p><strong>输入:</strong> s = &quot;successes&quot;</p><p><strong>输出:</strong> 6</p><p><strong>解释:</strong></p><ul><li>元音有：<code>&#39;u&#39;</code> 出现 1 次，<code>&#39;e&#39;</code> 出现 2 次。最大元音频率 = 2。</li><li>辅音有：<code>&#39;s&#39;</code> 出现 4 次，<code>&#39;c&#39;</code> 出现 2 次。最大辅音频率 = 4。</li><li>输出为 <code>2 + 4 = 6</code>。</li></ul><p><strong>示例 2：</strong></p><p><strong>输入:</strong> s = &quot;aeiaeia&quot;</p><p><strong>输出:</strong> 3</p><p><strong>解释:</strong></p><ul><li>元音有：<code>&#39;a&#39;</code> 出现 3 次，<code>&#39;e&#39;</code> 出现 2 次，<code>&#39;i&#39;</code> 出现 2 次。最大元音频率 = 3。</li><li><code>s</code> 中没有辅音。因此，最大辅音频率 = 0。</li><li>输出为 <code>3 + 0 = 3</code>。</li></ul><p><strong>提示:</strong></p><ul><li><code>1 &lt;= s.length &lt;= 100</code></li><li><code>s</code> 只包含小写英文字母</li></ul><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><p>用数组模拟哈希，遍历一次，每次更新元音和辅音的最大值。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    int maxFreqSum(string s) {</span>
<span class="line">        vector&lt;int&gt; buf(26,0);</span>
<span class="line">        int max_vowel=0;</span>
<span class="line">        int max_consonant=0;</span>
<span class="line">        for(char ch:s){</span>
<span class="line">            buf[ch-&#39;a&#39;]++;</span>
<span class="line">            if(ch==&#39;a&#39;||ch==&#39;e&#39;||ch==&#39;i&#39;||ch==&#39;o&#39;||ch==&#39;u&#39;){</span>
<span class="line">                max_vowel=max(max_vowel,buf[ch-&#39;a&#39;]);</span>
<span class="line">            }else{</span>
<span class="line">                max_consonant=max(max_consonant,buf[ch-&#39;a&#39;]);</span>
<span class="line">            }</span>
<span class="line">        }</span>
<span class="line">        return max_vowel+max_consonant;</span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂度分析</p><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(1)</li></ul>`,21)]))}const t=n(c,[["render",l]]),r=JSON.parse(`{"path":"/leetcode/20250913.html","title":"3541. 找到频率最高的元音和辅音","lang":"zh-CN","frontmatter":{"date":"2025-09-13T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["字符串","哈希表"]},"headers":[],"git":{"updatedTime":1757726171000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":1,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"2296946e5f674aa5f9d33e39f1ecf2ee16695329","time":1757726171000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20250913.md","excerpt":"\\n<p>给你一个由小写英文字母（<code>'a'</code> 到 <code>'z'</code>）组成的字符串 <code>s</code>。你的任务是找出出现频率 <strong>最高</strong> 的元音（<code>'a'</code>、<code>'e'</code>、<code>'i'</code>、<code>'o'</code>、<code>'u'</code> 中的一个）和出现频率<strong>最高</strong>的辅音（除元音以外的所有字母），并返回这两个频率之和。</p>\\n<p><strong>注意</strong>：如果有多个元音或辅音具有相同的最高频率，可以任选其中一个。如果字符串中没有元音或没有辅音，则其频率视为 0。</p>"}`);export{t as comp,r as data};
