import{_ as n,c as s,a,o as i}from"./app-CtcNptRb.js";const l={};function d(t,e){return i(),s("div",null,e[0]||(e[0]=[a(`<h1 id="_326-3-的幂" tabindex="-1"><a class="header-anchor" href="#_326-3-的幂"><span><a href="https://leetcode.cn/problems/power-of-three/" target="_blank" rel="noopener noreferrer">326. 3 的幂</a></span></a></h1><p>给定一个整数，写一个函数来判断它是否是 3 的幂次方。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p>整数 <code>n</code> 是 3 的幂次方需满足：存在整数 <code>x</code> 使得 <code>n == 3x</code></p><p><strong>示例 1：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 27</span>
<span class="line">输出：true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 0</span>
<span class="line">输出：false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 9</span>
<span class="line">输出：true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 4：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">输入：n = 45</span>
<span class="line">输出：false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p><ul><li><code>-231 &lt;= n &lt;= 231 - 1</code></li></ul><h1 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h1><p>预处理找到数据范围最大的3的幂</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">class Solution {</span>
<span class="line">public:</span>
<span class="line">    bool isPowerOfThree(int n) {</span>
<span class="line">        // int i = 0;</span>
<span class="line">        // long long power_of_3 = 1;</span>
<span class="line">        // while (power_of_3 &lt;= INT_MAX) {</span>
<span class="line">        //     i++;</span>
<span class="line">        //     power_of_3 *= 3;</span>
<span class="line">        // }</span>
<span class="line">        // i--;</span>
<span class="line">        // cout &lt;&lt; &quot;最大的满足 3^i &lt;= 2^31 - 1 的整数 i 是: &quot; &lt;&lt; i &lt;&lt; endl;</span>
<span class="line">        int largest=pow(3,19);</span>
<span class="line">        return n&gt;0 &amp;&amp; largest%n==0;    </span>
<span class="line">    }</span>
<span class="line">};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂度分析</p><ul><li>时间复杂度：O(1)</li><li>空间复杂度：O(1)</li></ul>`,18)]))}const c=n(l,[["render",d]]),p=JSON.parse('{"path":"/leetcode/20250813.html","title":"326. 3 的幂","lang":"zh-CN","frontmatter":{"date":"2025-08-13T00:00:00.000Z","category":["LeetCode每日一题"],"tag":["数学","递归"]},"headers":[],"git":{"updatedTime":1757033208000,"contributors":[{"name":"zhengqianhe0","username":"zhengqianhe0","email":"1821984431@qq.com","commits":2,"url":"https://github.com/zhengqianhe0"}],"changelog":[{"hash":"74ad287b3313cc2928def8d57bf83e6110f9aa4d","time":1757033208000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"整理分类"},{"hash":"4d1a271f11307d3805bf99ef2677187846c93477","time":1755047852000,"email":"1821984431@qq.com","author":"zhengqianhe0","message":"mryt"}]},"filePathRelative":"leetcode/20250813.md","excerpt":"\\n<p>给定一个整数，写一个函数来判断它是否是 3 的幂次方。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\\n<p>整数 <code>n</code> 是 3 的幂次方需满足：存在整数 <code>x</code> 使得 <code>n == 3x</code></p>\\n<p><strong>示例 1：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"text\\"><pre><code><span class=\\"line\\">输入：n = 27</span>\\n<span class=\\"line\\">输出：true</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{c as comp,p as data};
